<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>it.richkmeli</groupId>
    <artifactId>obfuscated-maven-project</artifactId>
    <packaging>jar</packaging>
    <version>1.0.0</version>

    <properties>
        <releases.folder>./releases/</releases.folder>
        <proguard.rules>src\main\resources\proguard\proguard-rules.pro</proguard.rules>
        <proguard.dictionary>src\main\resources\proguard\dictionary\default.txt</proguard.dictionary>
        <java.compiler.target>1.8</java.compiler.target>
        <java.compiler.source>1.8</java.compiler.source>
        <proguard-base.version>6.2.2</proguard-base.version>
        <junit.version>4.13.1</junit.version>
    </properties>

    <build>
        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.compiler.source}</source>
                    <target>${java.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>

                <configuration>
                    <obfuscate>true</obfuscate>
                    <proguardInclude>${proguard.rules}</proguardInclude>
                    <options>
                        <option>-obfuscationdictionary ${proguard.dictionary}</option>
                        <option>-packageobfuscationdictionary ${proguard.dictionary}</option>
                        <option>-classobfuscationdictionary ${proguard.dictionary}</option>

                        <!--<option>-optimizationpasses 3</option>-->
                        <!--<option>-overloadaggressively</option>--> <!-- Multiple fields and methods can then get the same names, as long as their arguments and return types are different, as required by Java bytecode -->
                        <!--<option>-allowaccessmodification</option>--> <!-- DON'T use this option when processing code that is to be used as a library, since classes and class members that weren't designed to be public in the API may become public.-->
                        <!--<option>-android</option>--> <!-- Specifies that the processed class files are targeted at the Android platform -->

                        <!--<option>-dontoptimize</option>--> <!-- It inlines and merges classes and class members, and it optimizes all methods at a bytecode level-->
                        <!--<option>-dontshrink</option>--> <!--it removes all unused classes and class members-->
                        <option>-dontnote
                        </option> <!-- Specifies not to print notes about potential mistakes or omissions in the configuration, such as typos in class names or missing options that might be useful -->
                        <option>-dontwarn
                        </option> <!-- Specifies not to warn about unresolved references and other important problems at all -->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,
                            *Annotation*,EnclosingMethod
                        </option>
                        <option>-keepparameternames</option>
                        <option>-renamesourcefileattribute SourceFile</option>
                    </options>

                    <inLibsFilter>!META-INF/**,!**.MF,!META-INF/maven/**</inLibsFilter>
                    <outFilter>
                        !**.ObjectCodec,!**.JsonFactory,!**.LIST,!*NOTICE*,!*LICENSE*,!**.tooling,!**.schemas,
                        !**.handlers,!**.pro,!**.gif,!**.properties,!**.html,!**.wsdd,!**.txt,!**.dtd,!**.xsd,
                        !**.jocl,!**.xml,!**.types,!**.g,!**.vm,!**.so,!**.jnilib,!**.dll,!**.Driver
                    </outFilter>

                    <includeDependencyInjar>true</includeDependencyInjar>
                    <includeDependency>true</includeDependency>

                    <injar>${project.name}-${project.version}.jar</injar>
                    <outjar>${project.name}-${project.version}.jar</outjar>
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jsse.jar</lib>
                    </libs>

                    </configuration>
                <dependencies>
                    <dependency>
                        <groupId>net.sf.proguard</groupId>
                        <artifactId>proguard-base</artifactId>
                        <version>${proguard-base.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <configuration>
                    <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>${project.artifactId}</artifactId>
                    <version>${project.version}</version>
                    <packaging>jar</packaging>
                    <generatePom>false</generatePom>
                </configuration>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- uncomment if you need to have all the code of the dependencies (also the code you are not using in this project) -->
<!--            <plugin>-->
<!--                <groupId>org.apache.maven.plugins</groupId>-->
<!--                <artifactId>maven-shade-plugin</artifactId>-->
<!--                <version>3.2.2</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <phase>package</phase>-->
<!--                        <goals>-->
<!--                            <goal>shade</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
        <repository>
            <id>github</id>
            <url>https://maven.pkg.github.com/richkmeli/JFramework</url>
        </repository>
    </repositories>

    <dependencies>
        <!-- example of dependency-->
        <dependency>
            <groupId>com.github.richkmeli.JFramework</groupId>
            <artifactId>JFramework</artifactId>
            <version>1.2.6</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
